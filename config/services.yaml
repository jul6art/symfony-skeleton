# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    admin_route_prefix: /admin
    available_colors:
        - red
        - pink
        - purple
        - deep-purple
        - indigo
        - blue
        - light-blue
        - cyan
        - teal
        - green
        - light-green
        - lime
        - yellow
        - amber
        - orange
        - deep-orange
        - brown
        - grey
        - blue-grey
        - black
        - dark
    available_functionalities:
        - func.audit
        - func.clear_cache
        - func.confirm_delete
        - func.edit_in_place
        - func.form_watcher
        - func.maintenance
        - func.manage_settings
        - func.progressive_web_app
        - func.switch_locale
        - func.switch_theme
    available_locales:
        - fr
        - en
        - de
    cookie_policy_url: 'http://allaboutcookies.org/'
    current_cookie_domain: '.%env(CURRENT_DOMAIN)%'
    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'
    group_class: App\Entity\Group
    locale: 'fr'
    logo: '/build/images/logo.png'
    mercure_jwt_key: '%env(MERCURE_JWT_KEY)%'
    mailer_from_address: '%env(MAILER_FROM_ADDRESS)%'
    mailer_from_name: '%env(MAILER_FROM_NAME)%'
    session_lifetime: 604800 # 30 * 24 * 3600 -> 30 jours
    skeleton_version: 1.0.1
    user_class: App\Entity\User

services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            $available_colors: '%available_colors%'
            $available_functionalities: '%available_functionalities%'
            $available_locales: '%available_locales%'
            $current_domain: '%env(CURRENT_DOMAIN)%'
            $environment: '%kernel.environment%'
            $http_protocol: '%env(HTTP_PROTOCOL)%'
            $locale: '%locale%'
            $mailer_from_address: '%mailer_from_address%'
            $mailer_from_name: '%mailer_from_name%'
            $project_dir: '%kernel.project_dir%'
            $recaptacha_secret: '%env(GOOGLE_RECAPTCHA_SECRET)%'
            $session_lifetime: '%session_lifetime%'
            $skeleton_version: '%skeleton_version%'

    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Factory,Migrations,Tests,Kernel.php}'

    App\Manager\GroupManager:
        public: true

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\EntityListener\:
        resource: '../src/EntityListener'
        tags:
            - { name: doctrine.orm.entity_listener }

    App\MessageHandler\:
        resource: '../src/MessageHandler'
        tags: ['messenger.message_handler']

    App\Maker\MakeSkeleton:
        arguments:
            - '@maker.doctrine_helper'
            - '@maker.renderer.form_type_renderer'
        tags: ['maker.command']

    App\Menu\Builder\NavbarBuilder:
        arguments: ['@knp_menu.factory']
        tags:
            - { name: knp_menu.menu_builder, method: createMenu, alias: navbar }

    App\Menu\Builder\TopbarBuilder:
        arguments: ['@knp_menu.factory']
        tags:
            - { name: knp_menu.menu_builder, method: createMenu, alias: topbar }

    App\Menu\Builder\UserDropdownBuilder:
        arguments: ['@knp_menu.factory']
        tags:
            - { name: knp_menu.menu_builder, method: createMenu, alias: usernav }

    App\Menu\Renderer\TopbarRenderer:
        arguments:
            - '@knp_menu.matcher'
        tags:
            - { name: knp_menu.renderer, alias: topbar_renderer }

    App\Mercure\JwtProvider:
        arguments:
            $token: '%env(MERCURE_JWT_TOKEN)%'

    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags:
            - { name: twig.extension }

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - !service { class: PDO, factory: ['@database_connection', 'getWrappedConnection'] }

    App\EventListener\LocaleListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }

    App\EventListener\NotificationListener:
        tags:
            - { name: kernel.event_listener, event: fos_user.registration.success, method: onRegistrationSuccess }
            - { name: kernel.event_listener, event: event.user.added, method: onUserAdded }

    App\EventListener\MaintenanceListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            - { name: kernel.event_listener, event: event.maintenance.viewed, method: onMaintenanceViewed }

    App\EventListener\UserListener:
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onInteractiveLogin }
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            - { name: kernel.event_listener, event: fos_user.registration.success, method: onRegistrationSuccess }
            - { name: kernel.event_listener, event: event.user.edited, method: onUserEdited }
